<?php
// auto-generated by sfPropelCrud
// date: 2014/05/27 02:02:23
?>
<?php

/**
 * friend actions.
 *
 * @package    gn_sns
 * @subpackage friend
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class friendActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('friend', 'list');
  }

  public function executeList()
  {
    $this->friends = FriendPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->friend = FriendPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->friend);
  }

  public function executeCreate()
  {
    $this->friend = new Friend();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->friend = FriendPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->friend);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $friend = new Friend();
    }
    else
    {
      $friend = FriendPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($friend);
    }

    $friendfileName = $this->getRequest()->getFileName('file');
    $this->getRequest()->moveFile('file', sfConfig::get('sf_upload_dir').'/'.$friendfileName);

    $friend->setUserId($this->getRequestParameter('user_id') ? $this->getRequestParameter('user_id') : null);
    $friend->setImage($friendfileName);
    $friend->setBody($this->getRequestParameter('body'));
    $friend->setId($this->getRequestParameter('id'));

    $friend->save();

    return $this->redirect('friend/show?id='.$friend->getId());
  }

  public function executeDelete()
  {
    $friend = FriendPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($friend);

    $friend->delete();

    return $this->redirect('friend/list');
  }
}
